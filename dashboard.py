import streamlit as st
import pandas as pd
import plotly.express as px
import seaborn as sns
import matplotlib.pyplot as plt

# Cargar los datos
@st.cache_data
def load_data():
    df = pd.read_csv("data.csv")
    df['Date'] = pd.to_datetime(df['Date'])
    df['Month'] = df['Date'].dt.to_period('M').astype(str)
    return df

df = load_data()

# T√≠tulo del dashboard
st.title("Dashboard de Ventas - Tiendas de Conveniencia")

st.markdown("""
### Objetivo
Este proyecto presenta un an√°lisis visual e interactivo de un conjunto de datos, bajo este contexto:

> Una cadena de tiendas de conveniencia quiere analizar sus ventas y el comportamiento de los clientes para mejorar su estrategia de marketing. Para ello, han recopilado un conjunto de datos que incluye informaci√≥n sobre las ventas, los productos y los clientes.
---
""")

st.markdown("### a. Examen del Conjunto de Datos")
st.dataframe(df.head(20))

st.markdown("""
---

### b. Variables Seleccionadas y Justificaci√≥n
| Variable             | Justificaci√≥n                                                                                                                            |
| -------------------- | ---------------------------------------------------------------------------------------------------------------------------------------- |
| `Product line`       | Permite identificar qu√© categor√≠as de productos son m√°s vendidas. Es esencial para segmentar el an√°lisis por tipo de producto.           |
| `Month`              | Derivada de `Date`, esta variable permite observar tendencias mensuales y detectar patrones de comportamiento.                           |
| `Gender`             | Permite analizar diferencias entre hombres y mujeres, √∫til para estrategias de marketing diferenciadas.                                  |
| `Payment`            | Permite conocer las preferencias de m√©todo de pago de los clientes.                                                                      |
| `Quantity` y `Total` | Representan el volumen de ventas y el ingreso total por transacci√≥n.                                                                     |
| `Unit price`         | Analiza si productos m√°s caros tienen menor o mayor frecuencia de compra.                                                                |
| `Rating`             | Refleja la percepci√≥n del cliente sobre su experiencia de compra, √∫til para evaluar satisfacci√≥n y fidelidad.                            |

---
""")

# Sidebar para filtros
st.sidebar.header("Filtros")
producto = st.sidebar.selectbox("L√≠nea de Producto", options=['Todos'] + sorted(df['Product line'].unique()))
ciudad = st.sidebar.selectbox("Ciudad", options=['Todas'] + sorted(df['City'].unique()))
genero = st.sidebar.radio("G√©nero", options=['Todos', 'Male', 'Female'])

filtro_df = df.copy()
if producto != 'Todos':
    filtro_df = filtro_df[filtro_df['Product line'] == producto]
if ciudad != 'Todas':
    filtro_df = filtro_df[filtro_df['City'] == ciudad]
if genero != 'Todos':
    filtro_df = filtro_df[filtro_df['Gender'] == genero]

# KPIs
st.subheader("üìå Indicadores Clave")
st.metric("Total Ventas ($)", f"{filtro_df['Total'].sum():,.2f}")
st.metric("Promedio de Calificaciones", f"{filtro_df['Rating'].mean():.2f}")
st.metric("Ingresos Brutos Promedio ($)", f"{filtro_df['gross income'].mean():,.2f}")

# Gr√°fico de l√≠neas: Total mensual por l√≠nea de producto
st.subheader("üìÖ Ventas Totales Mensuales por L√≠nea de Producto")

st.markdown("""
**¬øPara qu√© sirve este gr√°fico?**  
Permite observar la evoluci√≥n mensual de las ventas para cada l√≠nea de producto. Es clave para detectar estacionalidades o tendencias espec√≠ficas por categor√≠a.

**¬øQu√© muestra?**  
- Muestra el total vendido por cada l√≠nea de producto en cada mes.
- Al seleccionar "Todos", compara m√∫ltiples l√≠neas de productos en el tiempo.
- Si se filtra una l√≠nea espec√≠fica, se enfoca en su evoluci√≥n individual.

**Conclusi√≥n**  
La visualizaci√≥n ayuda a identificar productos con ventas estacionales, comportamiento constante o eventos que afectaron su rendimiento. Es √∫til para planificar marketing segmentado y gesti√≥n de stock.
""")

if producto == "Todos":
    ventas_mensuales = (
        filtro_df.groupby(["Month", "Product line"])["Total"].sum().reset_index()
    )
    fig1 = px.line(
        ventas_mensuales,
        x="Month",
        y="Total",
        color="Product line",
        markers=True,
        title="Ventas Mensuales por L√≠nea de Producto"
    )
else:
    ventas_mensuales = filtro_df.groupby("Month")["Total"].sum().reset_index()
    fig1 = px.line(
        ventas_mensuales,
        x="Month",
        y="Total",
        markers=True,
        title=f"Ventas Mensuales - {producto}"
    )

st.plotly_chart(fig1)

# Boxplot
st.subheader("üì¶ Distribuci√≥n de Precios por L√≠nea de Producto")
st.markdown("""
**¬øPara qu√© sirve este gr√°fico?**  
Comparar la dispersi√≥n de precios entre productos. √ötil para identificar productos premium o outliers.

**¬øQu√© muestra?**  
- *Sports and travel* tiene mayor variabilidad.
- *Health and beauty* es m√°s homog√©nea.

**Conclusi√≥n**  
Las categor√≠as con mayor variaci√≥n podr√≠an tener oportunidades para promociones segmentadas o estrategias de precios diferenciados.
""")
fig2, ax = plt.subplots()
sns.boxplot(data=filtro_df, x='Product line', y='Unit price', ax=ax)
plt.xticks(rotation=45)
st.pyplot(fig2)

# Histograma
st.subheader("‚≠ê Distribuci√≥n de Calificaciones")
st.markdown("""
**¬øPara qu√© sirve este gr√°fico?**  
Evaluar la percepci√≥n general del cliente sobre la experiencia de compra.

**¬øQu√© muestra?**  
- La mayor√≠a de las calificaciones est√°n por sobre 6.
- Hay pocos casos extremos de baja calificaci√≥n.

**Conclusi√≥n**  
La percepci√≥n del cliente es mayoritariamente positiva, aunque hay margen para investigar los casos bajos.
""")
fig3 = px.histogram(filtro_df, x='Rating', nbins=20)
st.plotly_chart(fig3)

# Gr√°fico 3D
st.subheader("üìä Relaci√≥n 3D: Precio, Total y Calificaci√≥n")
st.markdown("""
**¬øPara qu√© sirve este gr√°fico?**  
Explorar la relaci√≥n entre precio del producto, total gastado y satisfacci√≥n del cliente.

**¬øQu√© muestra?**  
- Algunas categor√≠as agrupan puntos con altas ventas y calificaciones.  
- Se observan relaciones interesantes entre el valor y la percepci√≥n.

**Conclusi√≥n**  
Se pueden detectar productos de alto rendimiento tanto en ventas como en satisfacci√≥n, ideales para destacar en campa√±as.
""")
fig4 = px.scatter_3d(filtro_df, x='Unit price', y='Total', z='Rating', color='Product line')
st.plotly_chart(fig4)

# Conclusi√≥n final
st.markdown("""
---
### ‚úÖ Conclusiones Generales
1. **Preferencias por g√©nero**: Algunas l√≠neas de productos tienen diferencias claras.
2. **Estrategia regional**: La ciudad impacta en comportamiento y m√©todos de pago.
3. **Satisfacci√≥n del cliente**: Buena en general, pero hay √°reas para investigar.
4. **Relaciones clave**: Precio, monto gastado y rating muestran correlaciones interesantes.

---
### Cr√©ditos
Elaborado por el grupo 54, integrantes:
- Tamara Arag√≥n Estay
- German Cigna Gutierrez
- Nicolas Lampe Huenul
- Manuel Riquelme Mardones
- Andr√©s Vera Moraga
""")
